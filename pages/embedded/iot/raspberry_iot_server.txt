====== Raspberry IoT server ======
La presente sezione contiene informazioni su come creare un server per IoT su Raspberry.  Le informazioni contenute in realtà dovrebbero poter essere applicate anche ad altri SBC (OrangePi, BananaPi, CubieBoard ...).

In parte i software descritti potranno essere installati anche su un server classico (fisico o VPS), perdendo ovviamente le sole funzionalità relative all'accesso diretto all'HW (GPIO).


===== Sistema di test =====

Il sistema di esempio è basato su **RaspberryPi 3** e immagine **Raspbian Jessie Lite**.

L'immagine raspbian (2016-09-23-raspbian-jessie-lite.zip) è stata decompressa e scritta su SD samsung da 16GB classe 10, e dopo il primo avvio è stata eseguita l'espansione del file system.


__**Riassunto delle funzionalità:**__
  * MQTT Broker (Mosquitto)
  * node-red
  * freeboard
  * accesso GPIO


__**Versioni attualmente disponibili (15/11/2016) **__

^ software/pacchetto ^ Versione Repo ^ Ultima Versione Disponbile ^ Note ^
| mosquitto | 1.3.4 | 1.4.10   | [1] |
| node-red  | 0.15.2 | 0.15 11/10/2016 |
| FreeBoard | -      | GitHub master 27/04/2016  |
| Apache    | 2.4.10 |  ??|
| wiringpi  | 2.32| 2.32 | 

[1]  Esiste un repository per debian aggiornato alla 1.4.10, descritto al seguente indirizzo: https://mosquitto.org/2013/01/mosquitto-debian-repository/


===== Installazione e configurazione =====

==== Raspbian ====
L'utente predefinito in raspbian si chiama ''pi'' e ho quindi utilizzato quello, anche per rendere la documentazione generica.

E' comunque opportuno modificare la password di default (raspberry).

Il server RPI3 è collegato ad una LAN dove è presenter un DHCP server.  Successivamente sarà possibile testare anche il collegamento via WiFi, visto che RPI3 dispone del WiFi integrato.

Il server RPI3 è solitamente accessibile tramite Bonjour/Zeroconf : ''raspberrypi.local''

Per i files di configurazione e l'installazione manuale di alcune componenti ho creato la directory ''~/IoTServer''.  

Utilizzare quindi tale PATH per tutto quello che riguarda le funzionalità IoT del Sistema.

==== Pacchetti di sistema utili da installare ====

=== Pacchetti Vari (console) ===
  sudo apt-get install aptitude nmap screen tmux picocom
  
  
=== Pacchetti Vari (XServer) ===
//
I seguenti pacchetti richiedono l'installazione di un XServer (ambiente grafico Linux) e quindi l'installazione di una serie piuttosto grande di dipendenze.

Ad ogni modo non è necessario mantenere sempre attivo il server X sul RaspberryPI. Inoltre, se si accedete da client Linux via ssh, è possibile utilizzare il parametro -X per eseguire la GUI sulla macchina client (X11 forwadring)
//

  sudo apt-get install cutecom
  
  
=== Scratch ===
Invece di installare il package scratch, utilizzare il package **nuscratch**, che contiene una versione più aggiornata, oltre ai blocchi per il comando del GPIO

  sudo apt-get install nuscratch
  
=== WiringPI ===
  sudo apt-get install wiringpi


Esempio di pilotaggio di un **Digital Output**
  gpio mode 0 out
  gpio write 0 1
  gpio write 0 0

I pin usati da WiringPi e quindi da gpio hanno una loro numerazione. Consulatare la reference card del GPIO.

=== npm ===
Per poter installare moduli aggiuntivi node-red o altri software che si basano su node.js occorre installare npm, alla versione 2:
  sudo apt-get install npm
  sudo npm install -g npm@2.x
  hash -r
 
  Note: npm version 3 is the latest version, but is currently not recommended for use.

=== GIT ===
Per poter installare software da GitHub o altri repository, ma anche gestire il versioning dei propri progetti, installar GIT:
  sudo apt-get install git git-flow
  
==== Mosquitto ====
Installato da repo alternativo, come descritto al link sopra riportato

    wget http://repo.mosquitto.org/debian/mosquitto-repo.gpg.key
    sudo apt-key add mosquitto-repo.gpg.key

    cd /etc/apt/sources.list.d/

    sudo wget http://repo.mosquitto.org/debian/mosquitto-jessie.list

    apt-get update

    apt-get install mosquitto

Il server moquitto viene installato e configurato già per l'avvio in automatico al boot.
Utilizza il file di configurazione  ** ''/etc/mosquitto/mosquitto.conf''**

==== Node-Red ====
Installato da repo standard.
  sudo apt-get install nodered
  
Una volta installato, node-red può essere avviato manualmente con il comando ''node-red-pi'', e a quel punto diventa disponibile sulla porta 1880:   http://raspberrypi.local:1880

Se non specificato all'avvio, i files  delle impostazioni e dei **Flow** vengono salvati in ''~/.node-red/''.

Per avviare node-red al boot eseguire il seguente comando:
  sudo systemctl enable nodered.service

Le impostazioni di avvio di node-red come demone sono contenute nel file: **''/etc/systemd/system/multi-user.target.wants/nodered.service''**  


  
=== Risorse ===
http://nodered.org/docs/hardware/raspberrypi
  
==== FreeBoard ====
 
Scaricato FreeBoard da GitHub
  cd ~/IoTServer
  git clone https://github.com/Freeboard/freeboard.git
  
Creato la configurazione di Apache per rendere fruibile FreeBoard:
  cd /var/www/html
  sudo ln -s /home/pi/IoTServer/freeboard iot
  
Ora freeboard dovrebbe essere raggiungibile all'URL: http://raspberrypi.local/iot